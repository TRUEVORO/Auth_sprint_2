"""Add partitions by device type in AuthHistoryOrm

Revision ID: a084a8c026f4
Revises: 0298b63bdb82
Create Date: 2023-05-13 18:36:13.686979

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = 'a084a8c026f4'
down_revision = '0298b63bdb82'
branch_labels = None
depends_on = None


def upgrade():
    op.drop_table('auth_history')

    op.create_table(
        'auth_history',
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('user_id', sa.UUID(), nullable=False),
        sa.Column('user_agent', sa.Text(), nullable=False),
        sa.Column('user_device_type', sa.Text(), nullable=False),
        sa.Column('timestamp', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id', 'user_device_type'),
        sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='history_fkey', ondelete="CASCADE"),
        sa.UniqueConstraint('id', 'user_device_type'),
        postgresql_partition_by='LIST (user_device_type)',
    )

    op.execute(
        """CREATE TABLE IF NOT EXISTS "auth_history_smart" PARTITION OF "auth_history" FOR VALUES IN ('smart');"""
    )
    op.execute(
        """CREATE TABLE IF NOT EXISTS "auth_history_mobile" PARTITION OF "auth_history" FOR VALUES IN ('mobile');"""
    )
    op.execute("""CREATE TABLE IF NOT EXISTS "auth_history_web" PARTITION OF "auth_history" FOR VALUES IN ('web');""")


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('auth_history', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('user_device_type')

    # ### end Alembic commands ###

    op.execute("""DROP TABLE IF EXISTS "auth_history_smart";""")
    op.execute("""DROP TABLE IF EXISTS "auth_history_mobile";""")
    op.execute("""DROP TABLE IF EXISTS "auth_history_web";""")
